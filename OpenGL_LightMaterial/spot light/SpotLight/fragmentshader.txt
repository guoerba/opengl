#version 450 core
    in vec2 Texcoord; 
    in vec3 outcolor;     
    in vec3 vertexPos; //顶点在观察坐标中的位置向量
    in vec3 Normal; //未处理的法向量
    in mat4 transformMat; 
    out vec4 color;     
    struct SpotLight{
        vec3 position;//光源位置向量(world space)
        vec3 spotdir;//灯光照射方向(world space)
        vec3 light;
        float cutoff;//切光角的余弦值
        float outercutoff;//外切光角的余弦值
        float ambient;
        float diffuse;
        float specular;
    };
    uniform SpotLight spotlight;
    struct Material{//物体材质
        sampler2D diffuse; //漫反射材质(漫反射贴图)
        sampler2D specular; //镜面反射材质(镜面反射贴图)
        float shineness; //光照散射系数（越低越散）
    }; 
    uniform Material material; //物体材质一致性变量
    void main(){
      //  vec3 lightPos = vec3(transformMat*vec4(spotlight.position,1.0f));//  vec3 lightDir = normalize(vertexPos - spotlight.position);
        vec3 intrudelight = normalize(-vertexPos); //入射光（方向向量）
//Front（spotdir）是一个向量，不是点。我们应该设置齐次向量为0，才能进行正确的坐标变换
//注意齐次坐标，点的齐次坐标是1，向量的齐次坐标为0(不包含位移分量)，这对于坐标变换来说差异是显著的
        vec3 lightDir = normalize(vec3(transformMat*vec4(spotlight.spotdir,0.0f)));

        float theta = dot(lightDir,-intrudelight);
        float brightness = (theta - spotlight.outercutoff)/(spotlight.cutoff - spotlight.outercutoff);

        vec3 ambient = spotlight.ambient*spotlight.light*vec3(texture(material.diffuse,Texcoord)); //环境光照

        vec3 norm = normalize(Normal);
        float diffuseStrength = max(0.0f,dot(norm,intrudelight)); //漫反射光照因子
        vec3 diffuse = brightness*diffuseStrength*spotlight.diffuse*spotlight.light*vec3(texture(material.diffuse,Texcoord)); //漫反射光照（在观察空间里计算）

        vec3 reflectlight = normalize(reflect(vertexPos,norm)); //反射光
        // vec3 viewDir = normalize(-vertexPos);
        float specularStrength = pow(max(0.0f,dot(reflectlight,intrudelight)),material.shineness); //镜面反射因子
        vec3 specular = brightness*10*specularStrength*vec3(texture(material.specular,Texcoord))*spotlight.specular*spotlight.light; //镜面反射

        vec4 result = vec4(ambient + diffuse + specular,1.0);
        color = result;
    }
